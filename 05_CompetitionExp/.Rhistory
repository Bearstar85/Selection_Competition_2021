RateMdrc$Metal <- factor(RateMdrc$Metal, levels = c("Control", "Ag", "Cd", "Cu"))
sapply(RateMdrc, class)
class(RateMdrc)
head(RateMdrc)
#Pick apart SM and TB fro plotting
RateMdrcTB <- subset.data.frame(RateMdrc, grepl("TB", RateMdrc$Species))
RateMdrcSM <- subset.data.frame(RateMdrc, grepl("S", RateMdrc$Species))
FigRateMdrcTB <- ggplot(RateMdrcTB, aes(t, Rate)) +
#geom_point(mapping = aes(shape = Metal, color = Metal), size = 4) +
geom_line(mapping = aes(colour = Metal), size = 1, method = 'lm', formula = y ~ poly(x,2), se= TRUE) + #Fits polynomal function to data (can be changed to lm: https://plotly.com/ggplot2/stat_smooth/) and https://stackoverflow.com/questions/31829528/specify-regression-line-intercept-r-ggplot2
#scale_color_brewer(palette = "Paired") +
geom_hline(yintercept = c(0.55, 0.36, 0.047, 0.38), colour = c("#6aa84f", "#828282", "#FDCC65", "#B85633"), linetype="dashed", size = 1) +
#geom_errorbar(aes(ymin = (mean-sd), ymax = (mean+sd), width=.4, color = Metal), position = position_dodge(0.1)) +
scale_shape_manual(values=c(19, 0, 1, 2)) +
scale_color_manual(values=c("#6aa84f", "#828282", "#FDCC65", "#B85633")) +
#geom_line(mapping = aes(t_SM ~ Ratio, color = Model_SM)) +
#scale_linetype_manual(values = 2) +
coord_cartesian(xlim=c(-0.1, 10.1), ylim=c(-0.7, 2), expand = F) + #ylim=c(-10000,+10000)
scale_x_discrete(limits=c(0,2,4,6,8,10)) +
#scale_y_continuous(trans = "log10") + #change the scale on y axis
#annotation_logticks(sides = "l") + # adds linier tickmarks
#theme(axis.text.x = element_text(angle = 45, hjust = 1)) + #adjust text tilt and possition
background_grid(major = "none", minor = "none") + # add thin horizontal lines
panel_border(colour = "black", size = 1) + # and a border around each panel
labs (x="Time (days)", y=expression("Growth Rate"~(day^{-1})), title = "A") +
theme(plot.title = element_text(vjust = - 7, hjust = 0.04)) +
theme(panel.spacing = unit(0.1, "lines")) +
theme(legend.title=element_blank()) +
theme(legend.text=element_text(size=30)) +
theme(text=(element_text(size=30))) +
theme(axis.text=(element_text(size=30))) +
theme(panel.background = element_blank()) +
theme(legend.text = element_text(face = "italic")) +
theme(aspect.ratio=1) +
theme(plot.margin=unit(c(0,1,0,0.2),"cm")) +
#stat_cor(aes(color = scientific_name), label.x = 3)
theme(legend.position = c(0.8,0.8),
#legend.justification = c("right", "top"),
#legend.box.just = "right",
legend.margin = margin(2, 10, 2, 2),
legend.box.background = element_rect(fill='white'),
legend.background = element_blank(),
legend.spacing.x=unit(0, "cm"),
legend.spacing.y=unit(0, "cm"))
print(FigRateMdrcTB)
dev.copy(pdf, "Figures/FigRateMdrcTB2.pdf")
dev.off()
FigRateMdrcSM <- ggplot(RateMdrcSM, aes(t, Rate)) +
#geom_point(mapping = aes(shape = Metal, color = Metal), size = 4) +
geom_line(mapping = aes(colour = Metal), size = 1, method = 'lm', formula = y ~ poly(x,2), se= TRUE) + #Fits polynomal function to data (can be changed to lm: https://plotly.com/ggplot2/stat_smooth/) and https://stackoverflow.com/questions/31829528/specify-regression-line-intercept-r-ggplot2
#scale_color_brewer(palette = "Paired") +
geom_hline(yintercept = c(1.55, 0.15, 1.22, 0.44), colour = c("#6aa84f", "#828282", "#FDCC65", "#B85633"), linetype="dashed", size = 1) +
#geom_errorbar(aes(ymin = (mean-sd), ymax = (mean+sd), width=.4, color = Metal), position = position_dodge(0.1)) +
scale_shape_manual(values=c(19, 0, 1, 2)) +
scale_color_manual(values=c("#6aa84f", "#828282", "#FDCC65", "#B85633")) +
#geom_line(mapping = aes(t_SM ~ Ratio, color = Model_SM)) +
#scale_linetype_manual(values = 2) +
coord_cartesian(xlim=c(-0.1, 10.1), ylim=c(-0.7, 2), expand = F) + #ylim=c(-10000,+10000)
scale_x_discrete(limits=c(0,2,4,6,8,10)) +
#scale_y_continuous(trans = "log10") + #change the scale on y axis
#annotation_logticks(sides = "l") + # adds linier tickmarks
#theme(axis.text.x = element_text(angle = 45, hjust = 1)) + #adjust text tilt and possition
background_grid(major = "none", minor = "none") + # add thin horizontal lines
panel_border(colour = "black", size = 1) + # and a border around each panel
labs (x="Time (days)", y=expression("Growth Rate"~(day^{-1})), title = "C") +
theme(plot.title = element_text(vjust = - 7, hjust = 0.04)) +
theme(panel.spacing = unit(0.1, "lines")) +
theme(legend.title=element_blank()) +
theme(legend.text=element_text(size=30)) +
theme(text=(element_text(size=30))) +
theme(axis.text=(element_text(size=30))) +
theme(panel.background = element_blank()) +
theme(legend.text = element_text(face = "italic")) +
theme(aspect.ratio=1) +
theme(plot.margin=unit(c(0,1,0,0.2),"cm")) +
#stat_cor(aes(color = scientific_name), label.x = 3)
theme(legend.position = "none", panel.background = element_blank())
print(FigRateMdrcSM)
dev.copy(pdf, "Figures/FigRateMdrcSM2.pdf")
dev.off()
#Next predicted growth rates based on Observations####
dir()
RateMO <- read.csv("Data/RateMO.csv", header=FALSE)
colnames(RateMO) <- c("ID", "t", "Species", "Metal", "Rate")
RateMO$Metal <- factor(RateMO$Metal, levels = c("Control", "Ag", "Cd", "Cu"))
sapply(RateMO, class)
class(RateMO)
head(RateMO)
#Pick apart SM and TB fro plotting
RateMOTB <- subset.data.frame(RateMO, grepl("TB", RateMO$Species))
RateMOSM <- subset.data.frame(RateMO, grepl("SM", RateMO$Species))
dim(RateMOTB)
FigRateMOTB <- ggplot(RateMOTB, aes(t, Rate)) +
#geom_point(mapping = aes(shape = Metal, color = Metal), size = 4) +
geom_line(mapping = aes(colour = Metal), size = 1, method = 'lm', formula = y ~ poly(x,2), se= TRUE) + #Fits polynomal function to data (can be changed to lm: https://plotly.com/ggplot2/stat_smooth/) and https://stackoverflow.com/questions/31829528/specify-regression-line-intercept-r-ggplot2
#scale_color_brewer(palette = "Paired") +
geom_hline(yintercept = 0) +
#geom_errorbar(aes(ymin = (mean-sd), ymax = (mean+sd), width=.4, color = Metal), position = position_dodge(0.1)) +
scale_shape_manual(values=c(19, 0, 1, 2)) +
scale_color_manual(values=c("#6aa84f", "#828282", "#FDCC65", "#B85633")) +
#geom_line(mapping = aes(t_SM ~ Ratio, color = Model_SM)) +
#scale_linetype_manual(values = 2) +
coord_cartesian(xlim=c(-0.1, 10.1), ylim=c(-0.5, 2), expand = F) + #ylim=c(-10000,+10000)
scale_x_discrete(limits=c(0,2,4,6,8,10)) +
#scale_y_continuous(trans = "log10") + #change the scale on y axis
#annotation_logticks(sides = "l") + # adds linier tickmarks
#theme(axis.text.x = element_text(angle = 45, hjust = 1)) + #adjust text tilt and possition
background_grid(major = "none", minor = "none") + # add thin horizontal lines
panel_border(colour = "black", size = 1) + # and a border around each panel
labs (x="Time (days)", y=expression("Growth Rate"~(day^{-1})), title = "Parallel") +
theme(plot.title = element_text(vjust = - 13, hjust = 0.04)) +
theme(panel.spacing = unit(0.1, "lines")) +
theme(legend.title=element_blank()) +
theme(legend.text=element_text(size=30)) +
theme(text=(element_text(size=30))) +
theme(axis.text=(element_text(size=30))) +
theme(panel.background = element_blank()) +
theme(legend.text = element_text(face = "italic")) +
theme(aspect.ratio=1) +
#stat_cor(aes(color = scientific_name), label.x = 3)
theme(legend.position = c("top"),
#legend.justification = c("right", "top"),
#legend.box.just = "right",
legend.margin = margin(2, 2, 2, 2),
legend.box.background = element_rect(fill='white'),
legend.background = element_blank(),
legend.spacing.x=unit(0, "cm"),
legend.spacing.y=unit(0, "cm"))
print(FigRateMOTB)
dev.copy(pdf, "Figures/FigRateMOTB.pdf")
dev.off()
FigRateMOSM <- ggplot(RateMOSM, aes(t, Rate)) +
#geom_point(mapping = aes(shape = Metal, color = Metal), size = 4) +
geom_line(mapping = aes(colour = Metal), size = 1, method = 'lm', formula = y ~ poly(x,2), se= TRUE) + #Fits polynomal function to data (can be changed to lm: https://plotly.com/ggplot2/stat_smooth/) and https://stackoverflow.com/questions/31829528/specify-regression-line-intercept-r-ggplot2
#scale_color_brewer(palette = "Paired") +
geom_hline(yintercept = 0) +
#geom_errorbar(aes(ymin = (mean-sd), ymax = (mean+sd), width=.4, color = Metal), position = position_dodge(0.1)) +
scale_shape_manual(values=c(19, 0, 1, 2)) +
scale_color_manual(values=c("#6aa84f", "#828282", "#FDCC65", "#B85633")) +
#geom_line(mapping = aes(t_SM ~ Ratio, color = Model_SM)) +
#scale_linetype_manual(values = 2) +
coord_cartesian(xlim=c(-0.1, 10.1), ylim=c(-0.5, 2), expand = F) + #ylim=c(-10000,+10000)
scale_x_discrete(limits=c(0,2,4,6,8,10)) +
#scale_y_continuous(trans = "log10") + #change the scale on y axis
#annotation_logticks(sides = "l") + # adds linier tickmarks
#theme(axis.text.x = element_text(angle = 45, hjust = 1)) + #adjust text tilt and possition
background_grid(major = "none", minor = "none") + # add thin horizontal lines
panel_border(colour = "black", size = 1) + # and a border around each panel
labs (x="Time (days)", y=expression("Growth Rate"~(day^{-1})), title = "Parallel") +
theme(plot.title = element_text(vjust = - 7, hjust = 0.04)) +
theme(panel.spacing = unit(0.1, "lines")) +
theme(legend.title=element_blank()) +
theme(legend.text=element_text(size=30)) +
theme(text=(element_text(size=30))) +
theme(axis.text=(element_text(size=30))) +
theme(panel.background = element_blank()) +
theme(legend.text = element_text(face = "italic")) +
theme(aspect.ratio=1) +
theme(plot.margin=unit(c(0,1,0,0.2),"cm")) +
#stat_cor(aes(color = scientific_name), label.x = 3)
theme(legend.position = c("top"),
#legend.justification = c("right", "top"),
#legend.box.just = "right",
legend.margin = margin(2, 2, 2, 2),
legend.box.background = element_rect(fill='white'),
legend.background = element_blank(),
legend.spacing.x=unit(0, "cm"),
legend.spacing.y=unit(0, "cm"))
print(FigRateMOSM)
dev.copy(pdf, "Figures/FigRateMOSM.pdf")
dev.off()
#Finaly observed growth rates left####
dir()
#Import data
RateO <- read.csv2("Data/GrowthRateComp.csv", header=TRUE)
head(RateO)
sapply(RateO, class)
RateO$Growth <- as.numeric(as.character(RateO$Growth))
RateO$Inhibition <- as.numeric(as.character(RateO$Inhibition))
RateO$RateRelativeSM <- as.numeric(as.character(RateO$RateRelativeSM))
AvaragesRateO <- ddply(RateO, c("Timepoint", "Metal", "Species"), summarise,
mean = mean(Growth), sd = sd(Growth))
#I want the avarage and Sd of inhibition for a table
AvaragesInhibition <- ddply(RateO, c("Timepoint", "Metal", "Species"), summarise,
mean = mean(Inhibition), sd = sd(Inhibition))
write.csv(AvaragesInhibition, 'Table/AvaragesInhibition.csv')
#Change order of Metal factors for plotting
RateO$Metal <- factor(RateO$Metal, levels = c("Control", "Ag", "Cd", "Cu"))
#seperate species
RateOTB <- subset.data.frame(RateO, grepl("TB", RateO$Species))
RateOSM <- subset.data.frame(RateO, grepl("SM", RateO$Species))
sapply(RateOTB, class)
FigRateOTB <- ggplot(RateOTB, aes(Timepoint, Growth)) +
geom_jitter(mapping = aes(color = Metal, shape=Metal), position=position_jitter(0.1), size = 4) + #mapping = aes(color = Metal), size = 4
scale_color_manual(values=c("#6aa84f", "#828282", "#FDCC65", "#B85633")) +
scale_shape_manual(values=c(19, 15, 17, 18)) +
coord_cartesian(ylim=c(-0.7, 2), expand = F) + #ylim=c(-10000,+10000)
geom_hline(yintercept = c(0.55, 0.36, 0.047, 0.38), colour = c("#6aa84f", "#828282", "#FDCC65", "#B85633"), linetype="dashed", size = 1) +
#scale_y_discrete(limits=c(0,0.1,0.2,0.3,0.4,0.5, 0.6, 0.7)) +
#scale_fill_manual(values=c("#6aa84f", "#828282", "#FDCC65", "#B85633")) +
background_grid(major = "none", minor = "none") + # add thin horizontal lines
panel_border(colour = "black", size = 1) + # and a border around each panel
labs (x="Time Range (days)",  y=expression("Growth Rate"~(day^{-1})), title = "B") +
expand_limits(x = c(0.5,3.5)) +
theme(plot.title = element_text(vjust = - 7, hjust = 0.04)) +
theme(panel.spacing = unit(0.1, "lines")) +
theme(legend.title=element_blank()) +
theme(legend.text=element_text(size=30)) +
theme(text=(element_text(size=30))) +
theme(axis.text=(element_text(size=30))) +
theme(panel.background = element_blank()) +
theme(legend.text = element_text(face = "italic")) +
theme(aspect.ratio=1) +
theme(plot.margin=unit(c(0,1,0,0.2),"cm")) +
theme(legend.position = c(0.8,0.8),
#legend.justification = c("right", "top"),
#legend.box.just = "right",
legend.margin = margin(2, 10, 2, 2),
legend.box.background = element_rect(fill='white'),
legend.background = element_blank(),
legend.spacing.x=unit(0, "cm"),
legend.spacing.y=unit(0, "cm"))
print(FigRateOTB)
dev.copy(pdf, "Figures/FigRateOTB2.pdf")
dev.off()
FigRateOSM <- ggplot(RateOSM, aes(Timepoint, Growth)) +
geom_jitter(mapping = aes(color = Metal, shape=Metal), position=position_jitter(0.1), size = 4) + #mapping = aes(color = Metal), size = 4
scale_color_manual(values=c("#6aa84f", "#828282", "#FDCC65", "#B85633")) +
scale_shape_manual(values=c(19, 15, 17, 18)) +
coord_cartesian(ylim=c(-0.7, 2), expand = F) + #ylim=c(-10000,+10000)
geom_hline(yintercept = c(1.55, 0.15, 1.22, 0.44), colour = c("#6aa84f", "#828282", "#FDCC65", "#B85633"), linetype="dashed", size = 1) +
#scale_y_discrete(limits=c(0,0.1,0.2,0.3,0.4,0.5, 0.6, 0.7)) +
#scale_fill_manual(values=c("#6aa84f", "#828282", "#FDCC65", "#B85633")) +
background_grid(major = "none", minor = "none") + # add thin horizontal lines
panel_border(colour = "black", size = 1) + # and a border around each panel
labs (x="Time Range (days)",  y=expression("Growth Rate"~(day^{-1})), title = "D") +
expand_limits(x = c(0.5,3.5)) +
theme(plot.title = element_text(vjust = - 7, hjust = 0.04)) +
theme(panel.spacing = unit(0.1, "lines")) +
theme(legend.title=element_blank()) +
theme(legend.text=element_text(size=30)) +
theme(text=(element_text(size=30))) +
theme(axis.text=(element_text(size=30))) +
theme(panel.background = element_blank()) +
theme(legend.text = element_text(face = "italic")) +
theme(aspect.ratio=1) +
theme(plot.margin=unit(c(0,1,0,0.2),"cm")) +
theme(legend.position = "none", panel.background = element_blank())
print(FigRateOSM)
dev.copy(pdf, "Figures/FigRateOSM.pdf")
dev.off()
#Some variations on growth plots: first inhibition####
FigInhOTB <- ggplot(RateOTB, aes(Timepoint, Inhibition)) +
geom_boxplot(mapping = aes(color = Metal)) + #mapping = aes(color = Metal), size = 4
scale_color_manual(values=c("#6aa84f", "#828282", "#FDCC65", "#B85633")) +
coord_cartesian(ylim=c(-0.1, 1.5), expand = F) + #ylim=c(-10000,+10000)
geom_hline(yintercept = 0) +
#scale_y_discrete(limits=c(0,0.1,0.2,0.3,0.4,0.5, 0.6, 0.7)) +
#scale_fill_manual(values=c("#6aa84f", "#828282", "#FDCC65", "#B85633")) +
background_grid(major = "none", minor = "none") + # add thin horizontal lines
panel_border(colour = "black", size = 1) + # and a border around each panel
labs (x="Time Range",  y=expression("Inhibition of Growth"), title = "B") +
theme(plot.title = element_text(vjust = - 14, hjust = 0.04)) +
theme(panel.spacing = unit(0.1, "lines")) +
theme(legend.title=element_blank()) +
theme(legend.text=element_text(size=20)) +
theme(text=(element_text(size=20))) +
theme(axis.text=(element_text(size=20))) +
theme(panel.background = element_blank()) +
theme(legend.text = element_text(face = "italic")) +
theme(aspect.ratio=0.5) +
theme(legend.position = c("top"),
#legend.justification = c("right", "top"),
#legend.box.just = "right",
legend.margin = margin(2, 2, 2, 2),
legend.box.background = element_rect(fill='white'),
legend.background = element_blank(),
legend.spacing.x=unit(0, "cm"),
legend.spacing.y=unit(0, "cm"))
print(FigInhOTB)
dev.copy(pdf, "Figures/FigInhOTB.pdf")
dev.off()
FigInhOSM <- ggplot(RateOSM, aes(Timepoint, Inhibition)) +
geom_boxplot(mapping = aes(color = Metal)) + #mapping = aes(color = Metal), size = 4
scale_color_manual(values=c("#6aa84f", "#828282", "#FDCC65", "#B85633")) +
coord_cartesian(ylim=c(-0.1, 1.5), expand = F) + #ylim=c(-10000,+10000)
geom_hline(yintercept = 0) +
#scale_y_discrete(limits=c(0,0.1,0.2,0.3,0.4,0.5, 0.6, 0.7)) +
#scale_fill_manual(values=c("#6aa84f", "#828282", "#FDCC65", "#B85633")) +
background_grid(major = "none", minor = "none") + # add thin horizontal lines
panel_border(colour = "black", size = 1) + # and a border around each panel
labs (x="Time Range",  y=expression("Inhibition of Growth"), title = "B)") +
theme(plot.title = element_text(vjust = - 14, hjust = 0.04)) +
theme(panel.spacing = unit(0.1, "lines")) +
theme(legend.title=element_blank()) +
theme(legend.text=element_text(size=20)) +
theme(text=(element_text(size=20))) +
theme(axis.text=(element_text(size=20))) +
theme(panel.background = element_blank()) +
theme(legend.text = element_text(face = "italic")) +
theme(aspect.ratio=0.5) +
theme(legend.position = c("top"),
#legend.justification = c("right", "top"),
#legend.box.just = "right",
legend.margin = margin(2, 2, 2, 2),
legend.box.background = element_rect(fill='white'),
legend.background = element_blank(),
legend.spacing.x=unit(0, "cm"),
legend.spacing.y=unit(0, "cm"))
print(FigInhOSM)
dev.copy(pdf, "Figures/FigInhOSM.pdf")
dev.off()
#Growth rate relartive SM####
FigRelativeOTB <- ggplot(RateOTB, aes(Timepoint, RateRelativeSM)) +
geom_boxplot(mapping = aes(color = Metal)) + #mapping = aes(color = Metal), size = 4
scale_color_manual(values=c("#6aa84f", "#828282", "#FDCC65", "#B85633")) +
coord_cartesian(ylim=c(-1.1, 1.1), expand = F) + #ylim=c(-10000,+10000)
geom_hline(yintercept = 0) +
#scale_y_discrete(limits=c(0,0.1,0.2,0.3,0.4,0.5, 0.6, 0.7)) +
#scale_fill_manual(values=c("#6aa84f", "#828282", "#FDCC65", "#B85633")) +
background_grid(major = "none", minor = "none") + # add thin horizontal lines
panel_border(colour = "black", size = 1) + # and a border around each panel
labs (x="Time Range",  y=expression("Growth Rate TB vs SM"~(day^{-1})), title = "B)") +
theme(plot.title = element_text(vjust = - 14, hjust = 0.04)) +
theme(panel.spacing = unit(0.1, "lines")) +
theme(legend.title=element_blank()) +
theme(legend.text=element_text(size=20)) +
theme(text=(element_text(size=20))) +
theme(axis.text=(element_text(size=20))) +
theme(panel.background = element_blank()) +
theme(legend.text = element_text(face = "italic")) +
theme(aspect.ratio=0.5) +
theme(legend.position = c("top"),
#legend.justification = c("right", "top"),
#legend.box.just = "right",
legend.margin = margin(2, 2, 2, 2),
legend.box.background = element_rect(fill='white'),
legend.background = element_blank(),
legend.spacing.x=unit(0, "cm"),
legend.spacing.y=unit(0, "cm"))
print(FigRelativeOTB)
dev.copy(pdf, "Figures/FigRelativeOTB.pdf")
dev.off()
FigRelativeOSM <- ggplot(RateOSM, aes(Timepoint, RateRelativeSM)) +
geom_boxplot(mapping = aes(color = Metal)) + #mapping = aes(color = Metal), size = 4
scale_color_manual(values=c("#6aa84f", "#828282", "#FDCC65", "#B85633")) +
coord_cartesian(ylim=c(-1.1, 1.1), expand = F) + #ylim=c(-10000,+10000)
geom_hline(yintercept = 0) +
#scale_y_discrete(limits=c(0,0.1,0.2,0.3,0.4,0.5, 0.6, 0.7)) +
#scale_fill_manual(values=c("#6aa84f", "#828282", "#FDCC65", "#B85633")) +
background_grid(major = "none", minor = "none") + # add thin horizontal lines
panel_border(colour = "black", size = 1) + # and a border around each panel
labs (x="Time Range",  y=expression("Growth Rate TB vs SM"~(day^{-1})), title = "B)") +
theme(plot.title = element_text(vjust = - 14, hjust = 0.04)) +
theme(panel.spacing = unit(0.1, "lines")) +
theme(legend.title=element_blank()) +
theme(legend.text=element_text(size=20)) +
theme(text=(element_text(size=20))) +
theme(axis.text=(element_text(size=20))) +
theme(panel.background = element_blank()) +
theme(legend.text = element_text(face = "italic")) +
theme(aspect.ratio=0.5) +
theme(legend.position = c("top"),
#legend.justification = c("right", "top"),
#legend.box.just = "right",
legend.margin = margin(2, 2, 2, 2),
legend.box.background = element_rect(fill='white'),
legend.background = element_blank(),
legend.spacing.x=unit(0, "cm"),
legend.spacing.y=unit(0, "cm"))
print(FigRelativeOSM)
dev.copy(pdf, "Figures/FigRelativeOSM.pdf")
dev.off()
#Stats####
#Start with Fv/Fm####
head(PAM)
sapply(PAM, class)
PAM2 <- PAM
PAM2$t <- as.factor(as.numeric(PAM2$t))
PAM2 <- as_tibble(PAM2)
sapply(PAM2, class)
PAM2 %>% group_by(Metal, t) %>% get_summary_stats(PAM, type = "mean_sd")
bxp <- ggboxplot(PAM2, x = "t", y = "PAM", color = "Metal", palette = "jco")
bxp
#Is there replicate differences (no)?
bxpID <- ggboxplot(PAM2, x = "id", y = "PAM", color = "Metal", palette = "jco")
bxpID
#Check normality: Normality ok but 12 outliers!
PAM2 %>% group_by(Metal, t) %>% shapiro_test(PAM)
PAM2 %>% group_by(Metal, t) %>% identify_outliers(PAM)
ggqqplot(PAM2, "PAM", ggtheme = theme_bw()) +
facet_grid(t ~ Metal, labeller = "label_both")
#Homogeneity of variance (Not strictly pass)
PAM2 %>% levene_test(PAM ~ Metal*t)
#Linear Mixed-Effects Models (code from Torstensson et al. 2015)
PAM2$Metal <- as.factor(as.character(PAM2$Metal))
PAM2$time <- as.factor(as.character(PAM2$time))
FvFm.lme <- lme(PAM~Metal*t,random=~1|id2, data=PAM2,contrasts=list(Metal=contr.sum)) #random=~1|id2
FvFm.aov <- anova.lme(FvFm.lme)
FvFm.aov
#A 2-way ANOVA give similar results (could not get Repeat Measurement 1-way ANOVA to run)
#FvFm2.aov <- anova_test(PAM ~ Metal*time,data=PAM2)
#get_anova_table(FvFm2.aov)
#I want to compare how metal inhibition compares with Control at different times, not a full factorial comparison
#So i will use the rstatix approach to subselect the interesting comparisons and do a bonferroni correction on the post hoc t-tests
# Pairwise comparisons between treatment groups
FvFm.pwc <- PAM2 %>%
group_by(time) %>%
pairwise_t_test(
PAM ~ Metal,
p.adjust.method = "bonferroni"
)
FvFm.pwc
#Output results
write.table(FvFm.aov, file = "StatResults/LME_FvFm.csv", row.names=TRUE, sep = ",")
write.table(FvFm.pwc, file = "StatResults/PostHocFvFm.csv", row.names=TRUE, sep = ",")
#Now repeat for the RedBlue PAM parameter####
#Need to drop rows without a observations (below detection limit)
PAM3 <- PAM2 %>% drop_na
PAM3 %>% group_by(Metal, time) %>% get_summary_stats(RedBlue, type = "mean_sd")
#Outlier points for AG on day 2,3, and 4
bxp <- ggboxplot(PAM3, x = "t", y = "RedBlue", color = "Metal", palette = "jco")
bxp
#3 Outlier points comes from 3 different replicates (replicate peak at different times)
bxpID <- ggboxplot(PAM2, x = "id", y = "RedBlue", color = "Metal", palette = "jco")
bxpID
#Check normality: Normality so so, especially for Ag for reasons explained above
PAM3 %>% group_by(Metal, t) %>% shapiro_test(RedBlue)
PAM3 %>% group_by(Metal, t) %>% identify_outliers(RedBlue)
ggqqplot(PAM3, "RedBlue", ggtheme = theme_bw()) +
facet_grid(t ~ Metal, labeller = "label_both")
#Homogeneity of variance (Okey in test but obviously raised in Ag at some timepoints)
PAM3 %>% levene_test(RedBlue ~ Metal*t)
#LME will not execute (apparently because of missing Cu values at t10).
sapply(PAM3, class)
PAM3$Metal <- as.factor(as.character(PAM3$Metal))
PAM3$time <- as.factor(as.character(PAM3$time))
RedBlue.lme <- lme(RedBlue~Metal*t,random=~1|id2, data=PAM3,contrasts=list(Metal=contr.sum))
anova.lme(RedBlue.lme)
#Use 2-way ANOVA instead (highly significant)
RedBlue.aov <- anova_test(RedBlue ~ Metal*time,data=PAM3)
get_anova_table(RedBlue.aov)
#I want to compare how metal inhibition compares with Control at different times, not a full factorial comparison
#So i will use the rstatix approach to subselect the interesting comparisons and do a bonferroni correction on the post hoc t-tests
RedBlue.pwc <- PAM3 %>%
group_by(time) %>%
pairwise_t_test(
RedBlue ~ Metal,
p.adjust.method = "bonferroni"
)
RedBlue.pwc
write.table(RedBlue.aov, file = "StatResults/ANOVA_RedBlue.csv", row.names=TRUE, sep = ",")
write.table(RedBlue.pwc, file = "StatResults/PostHocRedBlue.csv", row.names=TRUE, sep = ",")
#Okey now the inhibition response between species, which adds one more dimension.
#To make data comparable and test inhibition between TB and SM, I use standardized inhibition values
#(this remove baseline effects of variable growth rates)
#descriptive stats
RateO %>% group_by(Species, Metal, Timepoint) %>% get_summary_stats(Inhibition, type = "mean_sd")
#Check normality: Normality looks overall good with no outliers (but N=3).
RateOSM %>% group_by(Species, Metal, Timepoint) %>% shapiro_test(Inhibition)
RateOTB %>% group_by(Species, Metal, Timepoint) %>% shapiro_test(Inhibition)
RateOSM %>% group_by(Species, Metal, Timepoint) %>% identify_outliers(Inhibition)
RateOTB %>% group_by(Species, Metal, Timepoint) %>% identify_outliers(Inhibition)
ggqqplot(RateO, "Inhibition", ggtheme = theme_bw()) +
facet_grid(Timepoint ~ Metal*Species, labeller = "label_both")
# Homogeneous test (okey)
RateO %>% levene_test(Inhibition ~ Metal*Species*Timepoint)
#LME
RateO$idl <- as.factor(as.character(RateO$id))
RateO$Time <- as.factor(as.character(RateO$Time))
Inhibition.lme <- lme(Inhibition~Species*Metal*Timepoint,random=~1|id, data=RateO,contrasts=list(Metal=contr.sum))
I_LME <- anova.lme(Inhibition.lme)
I_LME
#3-way ANOVA yields comparibale results to LME (diff by species, metal, time and also species-metal and Metal-time interactions)
InhibitionO.aov <- anova_test(Inhibition ~ Species*Metal*Timepoint, data=RateO)
I_ANOVA <-  get_anova_table(InhibitionO.aov)
I_ANOVA
#I will use the rstatix approch to subselect the interesting comparisons and do a Bonferroni correction on the post hoc t-tests
#Since there lacks a 3+way interaction, and a Species*Time interaction it is also not appropriate with further analysis in these combinations
#So for the post-hoc test species comparison i pool time-points for Species analysis
IOSpecies.pwc <- RateO %>%
group_by(Metal) %>%
pairwise_t_test(
Inhibition ~ Species,
p.adjust.method = "bonferroni"
)
IOSpecies.pwc
#And the metal effects will be done per species over time
IOMetalSM.pwc <- RateOSM %>%
group_by(Metal) %>%
pairwise_t_test(
Inhibition ~ Timepoint,
p.adjust.method = "bonferroni"
)
IOMetalSM.pwc
IOMetalTB.pwc <- RateOTB %>%
group_by(Metal) %>%
pairwise_t_test(
Inhibition ~ Timepoint,
p.adjust.method = "bonferroni"
)
IOMetalTB.pwc
write.table(I_LME, file = "StatResults/Inhibiotion_LME.csv", row.names=TRUE, sep = ",")
write.table(IOMetalSM.pwc, file = "StatResults/IOMetalTB.csv", row.names=TRUE, sep = ",")
write.table(IOMetalTB.pwc, file = "StatResults/IOMetalSM.csv", row.names=TRUE, sep = ",")
write.table(IOSpecies.pwc, file = "StatResults/IOSpecies.csv", row.names=TRUE, sep = ",")
#Lets clear the objects
rm(list=ls())
getwd()
#and set the work directory to source file
setwd("~/Documents/R/Competition_MS/06_MetalMonitoring")
dir()
