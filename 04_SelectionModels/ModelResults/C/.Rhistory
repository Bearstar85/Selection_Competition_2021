#scale_linetype_manual(values=c(1,3,1)) +
#geom_errorbar(aes(ymin = X95L, ymax = X95H, width=.2, color = EC), position = position_dodge(0.3)) +
coord_cartesian(xlim=c(-0.1, 10.1), ylim=c(0.00005, 20000), expand = F) + #ylim=c(-10000,+10000)
scale_x_discrete(limits=c(0,2,4,6,8,10)) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) + #change the scale on y axis
annotation_logticks(sides = "l") + # adds linier tickmarks
#coord_cartesian(ylim=c(-4,4), expand = F) + #changes the y axis
#theme(axis.text.x = element_text(angle = 45, hjust = 1)) + #adjust text tilt and possition
#scale_fill_manual(values=c("#000000", "#000000", "#000000")) +
background_grid(major = "none", minor = "none") + # add thin horizontal lines
#theme_classic() +
panel_border(colour = "black", size = 1) + # and a border around each panel
labs (x="Time (days)", y=("Relative Biomass (SM/TB)"), title = "A) Control") +
theme(plot.title = element_text(vjust = - 7, hjust = 0.1)) +
theme(panel.spacing = unit(0.1, "lines")) +
theme(legend.title=element_blank()) +
theme(legend.text=element_text(size=25)) +
theme(text=(element_text(size=30))) +
theme(axis.text=(element_text(size=30))) +
theme(panel.background = element_blank()) +
theme(legend.text = element_text(face = "italic")) +
theme(aspect.ratio=1) +
#stat_cor(aes(color = scientific_name), label.x = 3)
theme(plot.margin=unit(c(0,1,0,0.2),"cm")) +
theme(legend.position = c(0.56,0.15),
#legend.justification = c("right", "top"),
#legend.box.just = "right",
#scale_fill_manual(breaks=c(3)),
legend.margin = margin(2, 2, 2, 2),
#guides(color = FALSE), #,color = FALSE, size = FALSE,
legend.box.background = element_rect(fill='white'),
legend.key = element_rect(fill = 'white', color = 'white'),
legend.background = element_blank(),
legend.spacing.x=unit(0, "cm"),
legend.spacing.y=unit(0, "cm"))
print(Fig3.A)
sapply(C_ratios3, class)
C_ratios3$Model <- mutate(C_ratios3$Model = fct_reorder(name, "Observation", "Competition-selection model "))
C_ratios3$Model <- mutate(name = fct_reorder(name, "Observation", "Competition-selection model "))
C_ratios3 <- C_ratios3 %>% mutate(Model = fct_reorder(Model, "Observation", "Competition-selection model "))
C_ratios3 %>% mutate(Model = fct_reorder(Model, "Observation", "Competition-selection model "))
C_ratios3 %>%
arrange(Model) %>%
mutate(name = factor(name, levels=c("Observation", "Competition-selection model ")))
C_ratios3 %>%
arrange(Model) %>%
mutate(Model = factor(Model, levels=c("Observation", "Competition-selection model ")))
Fig3.A <- ggplot(C_ratios3, aes(t, Ratio)) +
geom_line(data=Allstrain, aes(x=t, y=value, linetype = variable, colour = "Strain-by-strain")) +
guides(colour=guide_legend(ncol=1), linetype=FALSE) +
#geom_point(mapping = aes(color = Model, shape = Model), size = 0) +
stat_smooth(mapping = aes(colour = Model), size = 1.5, method = 'lm', formula = y ~ poly(x,2), se= TRUE) + #Fits polynomal function to data (can be changed to lm: https://plotly.com/ggplot2/stat_smooth/) and https://stackoverflow.com/questions/31829528/specify-regression-line-intercept-r-ggplot2
#scale_color_brewer(palette = "Paired") +
geom_point(data = subset(C_ratios3, Model == "Observation"), shape = 1, size = 4) +
#geom_smooth(mapping = aes(x = t_SM, y = (Ratio), color = Model_SM), method = "auto") +
scale_color_manual(values=c("#000000", "#6aa84f", "#cccccc"), aesthetics = c("colour", "fill"), guide=FALSE) +
#scale_shape_manual(values=c(19), guide=FALSE) +
#geom_line(mapping = aes(t_SM ~ Ratio, color = Model_SM)) +
#grid.force() +  # To make the grobs visible to grid editing tools
#grid.edit("geom_point.points", grep = TRUE, gp = gpar(lwd = 10)) + #lets see if this adjustes symbols line thickness
#scale_size_manual(values=c(10, 1, 1)) + #Size of symbols
#scale_linetype_manual(values=c(1,3,1)) +
#geom_errorbar(aes(ymin = X95L, ymax = X95H, width=.2, color = EC), position = position_dodge(0.3)) +
coord_cartesian(xlim=c(-0.1, 10.1), ylim=c(0.00005, 20000), expand = F) + #ylim=c(-10000,+10000)
scale_x_discrete(limits=c(0,2,4,6,8,10)) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) + #change the scale on y axis
annotation_logticks(sides = "l") + # adds linier tickmarks
#coord_cartesian(ylim=c(-4,4), expand = F) + #changes the y axis
#theme(axis.text.x = element_text(angle = 45, hjust = 1)) + #adjust text tilt and possition
#scale_fill_manual(values=c("#000000", "#000000", "#000000")) +
background_grid(major = "none", minor = "none") + # add thin horizontal lines
#theme_classic() +
panel_border(colour = "black", size = 1) + # and a border around each panel
labs (x="Time (days)", y=("Relative Biomass (SM/TB)"), title = "A) Control") +
theme(plot.title = element_text(vjust = - 7, hjust = 0.1)) +
theme(panel.spacing = unit(0.1, "lines")) +
theme(legend.title=element_blank()) +
theme(legend.text=element_text(size=25)) +
theme(text=(element_text(size=30))) +
theme(axis.text=(element_text(size=30))) +
theme(panel.background = element_blank()) +
theme(legend.text = element_text(face = "italic")) +
theme(aspect.ratio=1) +
#stat_cor(aes(color = scientific_name), label.x = 3)
theme(plot.margin=unit(c(0,1,0,0.2),"cm")) +
theme(legend.position = c(0.56,0.15),
#legend.justification = c("right", "top"),
#legend.box.just = "right",
#scale_fill_manual(breaks=c(3)),
legend.margin = margin(2, 2, 2, 2),
#guides(color = FALSE), #,color = FALSE, size = FALSE,
legend.box.background = element_rect(fill='white'),
legend.key = element_rect(fill = 'white', color = 'white'),
legend.background = element_blank(),
legend.spacing.x=unit(0, "cm"),
legend.spacing.y=unit(0, "cm"))
print(Fig3.A)
dev.copy(pdf, "Results/Fig3A.pdf")
dev.off()
C_ratios3 %>%
arrange(Model) %>%
mutate(Model = factor(Model, levels=c("Observation", "Competition-selection model ")))
C_ratios3$Model <- C_ratios3 %>%
arrange(Model) %>%
mutate(Model = factor(Model, levels=c("Observation", "Competition-selection model ")))
Fig3.A <- ggplot(C_ratios3, aes(t, Ratio)) +
geom_line(data=Allstrain, aes(x=t, y=value, linetype = variable, colour = "Strain-by-strain")) +
guides(colour=guide_legend(ncol=1), linetype=FALSE) +
#geom_point(mapping = aes(color = Model, shape = Model), size = 0) +
stat_smooth(mapping = aes(colour = Model), size = 1.5, method = 'lm', formula = y ~ poly(x,2), se= TRUE) + #Fits polynomal function to data (can be changed to lm: https://plotly.com/ggplot2/stat_smooth/) and https://stackoverflow.com/questions/31829528/specify-regression-line-intercept-r-ggplot2
#scale_color_brewer(palette = "Paired") +
geom_point(data = subset(C_ratios3, Model == "Observation"), shape = 1, size = 4) +
#geom_smooth(mapping = aes(x = t_SM, y = (Ratio), color = Model_SM), method = "auto") +
scale_color_manual(values=c("#000000", "#6aa84f", "#cccccc"), aesthetics = c("colour", "fill"), guide=FALSE) +
#scale_shape_manual(values=c(19), guide=FALSE) +
#geom_line(mapping = aes(t_SM ~ Ratio, color = Model_SM)) +
#grid.force() +  # To make the grobs visible to grid editing tools
#grid.edit("geom_point.points", grep = TRUE, gp = gpar(lwd = 10)) + #lets see if this adjustes symbols line thickness
#scale_size_manual(values=c(10, 1, 1)) + #Size of symbols
#scale_linetype_manual(values=c(1,3,1)) +
#geom_errorbar(aes(ymin = X95L, ymax = X95H, width=.2, color = EC), position = position_dodge(0.3)) +
coord_cartesian(xlim=c(-0.1, 10.1), ylim=c(0.00005, 20000), expand = F) + #ylim=c(-10000,+10000)
scale_x_discrete(limits=c(0,2,4,6,8,10)) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) + #change the scale on y axis
annotation_logticks(sides = "l") + # adds linier tickmarks
#coord_cartesian(ylim=c(-4,4), expand = F) + #changes the y axis
#theme(axis.text.x = element_text(angle = 45, hjust = 1)) + #adjust text tilt and possition
#scale_fill_manual(values=c("#000000", "#000000", "#000000")) +
background_grid(major = "none", minor = "none") + # add thin horizontal lines
#theme_classic() +
panel_border(colour = "black", size = 1) + # and a border around each panel
labs (x="Time (days)", y=("Relative Biomass (SM/TB)"), title = "A) Control") +
theme(plot.title = element_text(vjust = - 7, hjust = 0.1)) +
theme(panel.spacing = unit(0.1, "lines")) +
theme(legend.title=element_blank()) +
theme(legend.text=element_text(size=25)) +
theme(text=(element_text(size=30))) +
theme(axis.text=(element_text(size=30))) +
theme(panel.background = element_blank()) +
theme(legend.text = element_text(face = "italic")) +
theme(aspect.ratio=1) +
#stat_cor(aes(color = scientific_name), label.x = 3)
theme(plot.margin=unit(c(0,1,0,0.2),"cm")) +
theme(legend.position = c(0.56,0.15),
#legend.justification = c("right", "top"),
#legend.box.just = "right",
#scale_fill_manual(breaks=c(3)),
legend.margin = margin(2, 2, 2, 2),
#guides(color = FALSE), #,color = FALSE, size = FALSE,
legend.box.background = element_rect(fill='white'),
legend.key = element_rect(fill = 'white', color = 'white'),
legend.background = element_blank(),
legend.spacing.x=unit(0, "cm"),
legend.spacing.y=unit(0, "cm"))
print(Fig3.A)
dev.copy(pdf, "Results/Fig3A.pdf")
dev.off()
print(Fig3.A)
View(C_ratios3)
C_ratios3 <- rbind(C_ratios2, SelectionM)
C_ratios3$t <- as.numeric(as.character(C_ratios3$t))
C_ratios3$Ratio <- as.numeric(as.character(C_ratios3$Ratio))
C_ratios3$Model <- recode_factor(C_ratios3$Model,
"Selection DRC" = "Competition-selection model ")
C_ratios3 %>% mutate(Model = fct_reorder(Model, "Observation", "Competition-selection model "))
Fig3.A <- ggplot(C_ratios3, aes(t, Ratio)) +
geom_line(data=Allstrain, aes(x=t, y=value, linetype = variable, colour = "Strain-by-strain")) +
guides(colour=guide_legend(ncol=1), linetype=FALSE) +
#geom_point(mapping = aes(color = Model.Model, shape = Model.Model), size = 0) +
stat_smooth(mapping = aes(colour = Model), size = 1.5, method = 'lm', formula = y ~ poly(x,2), se= TRUE) + #Fits polynomal function to data (can be changed to lm: https://plotly.com/ggplot2/stat_smooth/) and https://stackoverflow.com/questions/31829528/specify-regression-line-intercept-r-ggplot2
#scale_color_brewer(palette = "Paired") +
geom_point(data = subset(C_ratios3, Model == "Observation"), shape = 1, size = 4) +
#geom_smooth(mapping = aes(x = t_SM, y = (Ratio), color = Model_SM), method = "auto") +
scale_color_manual(values=c("#000000", "#6aa84f", "#cccccc"), aesthetics = c("colour", "fill"), guide=FALSE) +
#scale_shape_manual(values=c(19), guide=FALSE) +
#geom_line(mapping = aes(t_SM ~ Ratio, color = Model_SM)) +
#grid.force() +  # To make the grobs visible to grid editing tools
#grid.edit("geom_point.points", grep = TRUE, gp = gpar(lwd = 10)) + #lets see if this adjustes symbols line thickness
#scale_size_manual(values=c(10, 1, 1)) + #Size of symbols
#scale_linetype_manual(values=c(1,3,1)) +
#geom_errorbar(aes(ymin = X95L, ymax = X95H, width=.2, color = EC), position = position_dodge(0.3)) +
coord_cartesian(xlim=c(-0.1, 10.1), ylim=c(0.00005, 20000), expand = F) + #ylim=c(-10000,+10000)
scale_x_discrete(limits=c(0,2,4,6,8,10)) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) + #change the scale on y axis
annotation_logticks(sides = "l") + # adds linier tickmarks
#coord_cartesian(ylim=c(-4,4), expand = F) + #changes the y axis
#theme(axis.text.x = element_text(angle = 45, hjust = 1)) + #adjust text tilt and possition
#scale_fill_manual(values=c("#000000", "#000000", "#000000")) +
background_grid(major = "none", minor = "none") + # add thin horizontal lines
#theme_classic() +
panel_border(colour = "black", size = 1) + # and a border around each panel
labs (x="Time (days)", y=("Relative Biomass (SM/TB)"), title = "A) Control") +
theme(plot.title = element_text(vjust = - 7, hjust = 0.1)) +
theme(panel.spacing = unit(0.1, "lines")) +
theme(legend.title=element_blank()) +
theme(legend.text=element_text(size=25)) +
theme(text=(element_text(size=30))) +
theme(axis.text=(element_text(size=30))) +
theme(panel.background = element_blank()) +
theme(legend.text = element_text(face = "italic")) +
theme(aspect.ratio=1) +
#stat_cor(aes(color = scientific_name), label.x = 3)
theme(plot.margin=unit(c(0,1,0,0.2),"cm")) +
theme(legend.position = c(0.56,0.15),
#legend.justification = c("right", "top"),
#legend.box.just = "right",
#scale_fill_manual(breaks=c(3)),
legend.margin = margin(2, 2, 2, 2),
#guides(color = FALSE), #,color = FALSE, size = FALSE,
legend.box.background = element_rect(fill='white'),
legend.key = element_rect(fill = 'white', color = 'white'),
legend.background = element_blank(),
legend.spacing.x=unit(0, "cm"),
legend.spacing.y=unit(0, "cm"))
print(Fig3.A)
C_ratios3$Model <- C_ratios3 %>%
arrange(Model) %>%
mutate(Model = factor(Model, levels=c("Observation", "Competition-selection model ")))
Fig3.A <- ggplot(C_ratios3, aes(t, Ratio)) +
geom_line(data=Allstrain, aes(x=t, y=value, linetype = variable, colour = "Strain-by-strain")) +
guides(colour=guide_legend(ncol=1), linetype=FALSE) +
#geom_point(mapping = aes(color = Model.Model, shape = Model.Model), size = 0) +
stat_smooth(mapping = aes(colour = Model), size = 1.5, method = 'lm', formula = y ~ poly(x,2), se= TRUE) + #Fits polynomal function to data (can be changed to lm: https://plotly.com/ggplot2/stat_smooth/) and https://stackoverflow.com/questions/31829528/specify-regression-line-intercept-r-ggplot2
#scale_color_brewer(palette = "Paired") +
geom_point(data = subset(C_ratios3, Model == "Observation"), shape = 1, size = 4) +
#geom_smooth(mapping = aes(x = t_SM, y = (Ratio), color = Model_SM), method = "auto") +
scale_color_manual(values=c("#000000", "#6aa84f", "#cccccc"), aesthetics = c("colour", "fill"), guide=FALSE) +
#scale_shape_manual(values=c(19), guide=FALSE) +
#geom_line(mapping = aes(t_SM ~ Ratio, color = Model_SM)) +
#grid.force() +  # To make the grobs visible to grid editing tools
#grid.edit("geom_point.points", grep = TRUE, gp = gpar(lwd = 10)) + #lets see if this adjustes symbols line thickness
#scale_size_manual(values=c(10, 1, 1)) + #Size of symbols
#scale_linetype_manual(values=c(1,3,1)) +
#geom_errorbar(aes(ymin = X95L, ymax = X95H, width=.2, color = EC), position = position_dodge(0.3)) +
coord_cartesian(xlim=c(-0.1, 10.1), ylim=c(0.00005, 20000), expand = F) + #ylim=c(-10000,+10000)
scale_x_discrete(limits=c(0,2,4,6,8,10)) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) + #change the scale on y axis
annotation_logticks(sides = "l") + # adds linier tickmarks
#coord_cartesian(ylim=c(-4,4), expand = F) + #changes the y axis
#theme(axis.text.x = element_text(angle = 45, hjust = 1)) + #adjust text tilt and possition
#scale_fill_manual(values=c("#000000", "#000000", "#000000")) +
background_grid(major = "none", minor = "none") + # add thin horizontal lines
#theme_classic() +
panel_border(colour = "black", size = 1) + # and a border around each panel
labs (x="Time (days)", y=("Relative Biomass (SM/TB)"), title = "A) Control") +
theme(plot.title = element_text(vjust = - 7, hjust = 0.1)) +
theme(panel.spacing = unit(0.1, "lines")) +
theme(legend.title=element_blank()) +
theme(legend.text=element_text(size=25)) +
theme(text=(element_text(size=30))) +
theme(axis.text=(element_text(size=30))) +
theme(panel.background = element_blank()) +
theme(legend.text = element_text(face = "italic")) +
theme(aspect.ratio=1) +
#stat_cor(aes(color = scientific_name), label.x = 3)
theme(plot.margin=unit(c(0,1,0,0.2),"cm")) +
theme(legend.position = c(0.56,0.15),
#legend.justification = c("right", "top"),
#legend.box.just = "right",
#scale_fill_manual(breaks=c(3)),
legend.margin = margin(2, 2, 2, 2),
#guides(color = FALSE), #,color = FALSE, size = FALSE,
legend.box.background = element_rect(fill='white'),
legend.key = element_rect(fill = 'white', color = 'white'),
legend.background = element_blank(),
legend.spacing.x=unit(0, "cm"),
legend.spacing.y=unit(0, "cm"))
print(Fig3.A)
View(C_ratios3)
#Change order of Models factors for plotting
C_ratios3$Model <- factor(C_ratios3$Model, levels = c("Observed", "Competition-selection model "))
C_ratios3 <- rbind(C_ratios2, SelectionM)
C_ratios3$t <- as.numeric(as.character(C_ratios3$t))
C_ratios3$Ratio <- as.numeric(as.character(C_ratios3$Ratio))
C_ratios3$Model <- recode_factor(C_ratios3$Model,
"Selection DRC" = "Competition-selection model ")
#Change order of Models factors for plotting
C_ratios3$Model <- factor(C_ratios3$Model, levels = c("Observed", "Competition-selection model "))
View(C_ratios3)
C_ratios3 <- rbind(C_ratios2, SelectionM)
C_ratios3$t <- as.numeric(as.character(C_ratios3$t))
C_ratios3$Ratio <- as.numeric(as.character(C_ratios3$Ratio))
C_ratios3$Model <- recode_factor(C_ratios3$Model,
"Selection DRC" = "Competition-selection model ")
View(C_ratios3)
#Change order of Models factors for plotting
C_ratios3$Model <- factor(C_ratios3$Model, levels = c("Observation", "Competition-selection model "))
Fig3.A <- ggplot(C_ratios3, aes(t, Ratio)) +
geom_line(data=Allstrain, aes(x=t, y=value, linetype = variable, colour = "Strain-by-strain")) +
guides(colour=guide_legend(ncol=1), linetype=FALSE) +
#geom_point(mapping = aes(color = Model.Model, shape = Model.Model), size = 0) +
stat_smooth(mapping = aes(colour = Model), size = 1.5, method = 'lm', formula = y ~ poly(x,2), se= TRUE) + #Fits polynomal function to data (can be changed to lm: https://plotly.com/ggplot2/stat_smooth/) and https://stackoverflow.com/questions/31829528/specify-regression-line-intercept-r-ggplot2
#scale_color_brewer(palette = "Paired") +
geom_point(data = subset(C_ratios3, Model == "Observation"), shape = 1, size = 4) +
#geom_smooth(mapping = aes(x = t_SM, y = (Ratio), color = Model_SM), method = "auto") +
scale_color_manual(values=c("#000000", "#6aa84f", "#cccccc"), aesthetics = c("colour", "fill"), guide=FALSE) +
#scale_shape_manual(values=c(19), guide=FALSE) +
#geom_line(mapping = aes(t_SM ~ Ratio, color = Model_SM)) +
#grid.force() +  # To make the grobs visible to grid editing tools
#grid.edit("geom_point.points", grep = TRUE, gp = gpar(lwd = 10)) + #lets see if this adjustes symbols line thickness
#scale_size_manual(values=c(10, 1, 1)) + #Size of symbols
#scale_linetype_manual(values=c(1,3,1)) +
#geom_errorbar(aes(ymin = X95L, ymax = X95H, width=.2, color = EC), position = position_dodge(0.3)) +
coord_cartesian(xlim=c(-0.1, 10.1), ylim=c(0.00005, 20000), expand = F) + #ylim=c(-10000,+10000)
scale_x_discrete(limits=c(0,2,4,6,8,10)) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) + #change the scale on y axis
annotation_logticks(sides = "l") + # adds linier tickmarks
#coord_cartesian(ylim=c(-4,4), expand = F) + #changes the y axis
#theme(axis.text.x = element_text(angle = 45, hjust = 1)) + #adjust text tilt and possition
#scale_fill_manual(values=c("#000000", "#000000", "#000000")) +
background_grid(major = "none", minor = "none") + # add thin horizontal lines
#theme_classic() +
panel_border(colour = "black", size = 1) + # and a border around each panel
labs (x="Time (days)", y=("Relative Biomass (SM/TB)"), title = "A) Control") +
theme(plot.title = element_text(vjust = - 7, hjust = 0.1)) +
theme(panel.spacing = unit(0.1, "lines")) +
theme(legend.title=element_blank()) +
theme(legend.text=element_text(size=25)) +
theme(text=(element_text(size=30))) +
theme(axis.text=(element_text(size=30))) +
theme(panel.background = element_blank()) +
theme(legend.text = element_text(face = "italic")) +
theme(aspect.ratio=1) +
#stat_cor(aes(color = scientific_name), label.x = 3)
theme(plot.margin=unit(c(0,1,0,0.2),"cm")) +
theme(legend.position = c(0.56,0.15),
#legend.justification = c("right", "top"),
#legend.box.just = "right",
#scale_fill_manual(breaks=c(3)),
legend.margin = margin(2, 2, 2, 2),
#guides(color = FALSE), #,color = FALSE, size = FALSE,
legend.box.background = element_rect(fill='white'),
legend.key = element_rect(fill = 'white', color = 'white'),
legend.background = element_blank(),
legend.spacing.x=unit(0, "cm"),
legend.spacing.y=unit(0, "cm"))
print(Fig3.A)
View(C_ratios3)
#Change order of Models factors for plotting
rownames(C_ratios3) <- NULL
#REMOVING SelectionMO from plotting
C_ratios3 <- rbind(C_ratios2, SelectionM)
C_ratios3$t <- as.numeric(as.character(C_ratios3$t))
C_ratios3$Ratio <- as.numeric(as.character(C_ratios3$Ratio))
C_ratios3$Model <- recode_factor(C_ratios3$Model,
"Selection DRC" = "Competition-selection model ")
#Change order of Models factors for plotting
rownames(C_ratios3) <- NULL
C_ratios3$Model <- factor(C_ratios3$Model, levels = c("Observation", "Competition-selection model "))
Fig3.A <- ggplot(C_ratios3, aes(t, Ratio)) +
geom_line(data=Allstrain, aes(x=t, y=value, linetype = variable, colour = "Strain-by-strain")) +
guides(colour=guide_legend(ncol=1), linetype=FALSE) +
#geom_point(mapping = aes(color = Model.Model, shape = Model.Model), size = 0) +
stat_smooth(mapping = aes(colour = Model), size = 1.5, method = 'lm', formula = y ~ poly(x,2), se= TRUE) + #Fits polynomal function to data (can be changed to lm: https://plotly.com/ggplot2/stat_smooth/) and https://stackoverflow.com/questions/31829528/specify-regression-line-intercept-r-ggplot2
#scale_color_brewer(palette = "Paired") +
geom_point(data = subset(C_ratios3, Model == "Observation"), shape = 1, size = 4) +
#geom_smooth(mapping = aes(x = t_SM, y = (Ratio), color = Model_SM), method = "auto") +
scale_color_manual(values=c("#000000", "#6aa84f", "#cccccc"), aesthetics = c("colour", "fill"), guide=FALSE) +
#scale_shape_manual(values=c(19), guide=FALSE) +
#geom_line(mapping = aes(t_SM ~ Ratio, color = Model_SM)) +
#grid.force() +  # To make the grobs visible to grid editing tools
#grid.edit("geom_point.points", grep = TRUE, gp = gpar(lwd = 10)) + #lets see if this adjustes symbols line thickness
#scale_size_manual(values=c(10, 1, 1)) + #Size of symbols
#scale_linetype_manual(values=c(1,3,1)) +
#geom_errorbar(aes(ymin = X95L, ymax = X95H, width=.2, color = EC), position = position_dodge(0.3)) +
coord_cartesian(xlim=c(-0.1, 10.1), ylim=c(0.00005, 20000), expand = F) + #ylim=c(-10000,+10000)
scale_x_discrete(limits=c(0,2,4,6,8,10)) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) + #change the scale on y axis
annotation_logticks(sides = "l") + # adds linier tickmarks
#coord_cartesian(ylim=c(-4,4), expand = F) + #changes the y axis
#theme(axis.text.x = element_text(angle = 45, hjust = 1)) + #adjust text tilt and possition
#scale_fill_manual(values=c("#000000", "#000000", "#000000")) +
background_grid(major = "none", minor = "none") + # add thin horizontal lines
#theme_classic() +
panel_border(colour = "black", size = 1) + # and a border around each panel
labs (x="Time (days)", y=("Relative Biomass (SM/TB)"), title = "A) Control") +
theme(plot.title = element_text(vjust = - 7, hjust = 0.1)) +
theme(panel.spacing = unit(0.1, "lines")) +
theme(legend.title=element_blank()) +
theme(legend.text=element_text(size=25)) +
theme(text=(element_text(size=30))) +
theme(axis.text=(element_text(size=30))) +
theme(panel.background = element_blank()) +
theme(legend.text = element_text(face = "italic")) +
theme(aspect.ratio=1) +
#stat_cor(aes(color = scientific_name), label.x = 3)
theme(plot.margin=unit(c(0,1,0,0.2),"cm")) +
theme(legend.position = c(0.56,0.15),
#legend.justification = c("right", "top"),
#legend.box.just = "right",
#scale_fill_manual(breaks=c(3)),
legend.margin = margin(2, 2, 2, 2),
#guides(color = FALSE), #,color = FALSE, size = FALSE,
legend.box.background = element_rect(fill='white'),
legend.key = element_rect(fill = 'white', color = 'white'),
legend.background = element_blank(),
legend.spacing.x=unit(0, "cm"),
legend.spacing.y=unit(0, "cm"))
print(Fig3.A)
Fig3.A <- ggplot(C_ratios3, aes(t, Ratio)) +
geom_line(data=Allstrain, aes(x=t, y=value, linetype = variable, colour = "Strain-by-strain")) +
guides(colour=guide_legend(ncol=1), linetype=FALSE) +
#geom_point(mapping = aes(color = Model, shape = Model), size = 0) +
stat_smooth(mapping = aes(colour = Model), size = 1.5, method = 'lm', formula = y ~ poly(x,2), se= TRUE) + #Fits polynomal function to data (can be changed to lm: https://plotly.com/ggplot2/stat_smooth/) and https://stackoverflow.com/questions/31829528/specify-regression-line-intercept-r-ggplot2
#scale_color_brewer(palette = "Paired") +
geom_point(data = subset(C_ratios3, Model == "Observation"), shape = 1, size = 4) +
#geom_smooth(mapping = aes(x = t_SM, y = (Ratio), color = Model_SM), method = "auto") +
scale_color_manual(values=c("#6aa84f", "#000000", "#cccccc"), aesthetics = c("colour", "fill"), guide=FALSE) +
#scale_shape_manual(values=c(19), guide=FALSE) +
#geom_line(mapping = aes(t_SM ~ Ratio, color = Model_SM)) +
#grid.force() +  # To make the grobs visible to grid editing tools
#grid.edit("geom_point.points", grep = TRUE, gp = gpar(lwd = 10)) + #lets see if this adjustes symbols line thickness
#scale_size_manual(values=c(10, 1, 1)) + #Size of symbols
#scale_linetype_manual(values=c(1,3,1)) +
#geom_errorbar(aes(ymin = X95L, ymax = X95H, width=.2, color = EC), position = position_dodge(0.3)) +
coord_cartesian(xlim=c(-0.1, 10.1), ylim=c(0.00005, 20000), expand = F) + #ylim=c(-10000,+10000)
scale_x_discrete(limits=c(0,2,4,6,8,10)) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) + #change the scale on y axis
annotation_logticks(sides = "l") + # adds linier tickmarks
#coord_cartesian(ylim=c(-4,4), expand = F) + #changes the y axis
#theme(axis.text.x = element_text(angle = 45, hjust = 1)) + #adjust text tilt and possition
#scale_fill_manual(values=c("#000000", "#000000", "#000000")) +
background_grid(major = "none", minor = "none") + # add thin horizontal lines
#theme_classic() +
panel_border(colour = "black", size = 1) + # and a border around each panel
labs (x="Time (days)", y=("Relative Biomass (SM/TB)"), title = "A) Control") +
theme(plot.title = element_text(vjust = - 7, hjust = 0.1)) +
theme(panel.spacing = unit(0.1, "lines")) +
theme(legend.title=element_blank()) +
theme(legend.text=element_text(size=25)) +
theme(text=(element_text(size=30))) +
theme(axis.text=(element_text(size=30))) +
theme(panel.background = element_blank()) +
theme(legend.text = element_text(face = "italic")) +
theme(aspect.ratio=1) +
#stat_cor(aes(color = scientific_name), label.x = 3)
theme(plot.margin=unit(c(0,1,0,0.2),"cm")) +
theme(legend.position = c(0.56,0.15),
#legend.justification = c("right", "top"),
#legend.box.just = "right",
#scale_fill_manual(breaks=c(3)),
legend.margin = margin(2, 2, 2, 2),
#guides(color = FALSE), #,color = FALSE, size = FALSE,
legend.box.background = element_rect(fill='white'),
legend.key = element_rect(fill = 'white', color = 'white'),
legend.background = element_blank(),
legend.spacing.x=unit(0, "cm"),
legend.spacing.y=unit(0, "cm"))
print(Fig3.A)
dev.copy(pdf, "Results/Fig3A.pdf")
dev.off()
Fig3.A <- ggplot(C_ratios3, aes(t, Ratio)) +
geom_line(data=Allstrain, aes(x=t, y=value, linetype = variable, colour = "Strain-by-strain")) +
guides(colour=guide_legend(ncol=1), linetype=FALSE) +
#geom_point(mapping = aes(color = Model, shape = Model), size = 0) +
stat_smooth(mapping = aes(colour = Model), size = 1.5, method = 'lm', formula = y ~ poly(x,2), se= TRUE) + #Fits polynomal function to data (can be changed to lm: https://plotly.com/ggplot2/stat_smooth/) and https://stackoverflow.com/questions/31829528/specify-regression-line-intercept-r-ggplot2
#scale_color_brewer(palette = "Paired") +
geom_point(data = subset(C_ratios3, Model == "Observation"), shape = 1, size = 4) +
#geom_smooth(mapping = aes(x = t_SM, y = (Ratio), color = Model_SM), method = "auto") +
scale_color_manual(values=c("#6aa84f", "#000000", "#cccccc"), aesthetics = c("colour", "fill"), guide=FALSE) +
#scale_shape_manual(values=c(19), guide=FALSE) +
#geom_line(mapping = aes(t_SM ~ Ratio, color = Model_SM)) +
#grid.force() +  # To make the grobs visible to grid editing tools
#grid.edit("geom_point.points", grep = TRUE, gp = gpar(lwd = 10)) + #lets see if this adjustes symbols line thickness
#scale_size_manual(values=c(10, 1, 1)) + #Size of symbols
#scale_linetype_manual(values=c(1,3,1)) +
#geom_errorbar(aes(ymin = X95L, ymax = X95H, width=.2, color = EC), position = position_dodge(0.3)) +
coord_cartesian(xlim=c(-0.1, 10.1), ylim=c(0.00005, 20000), expand = F) + #ylim=c(-10000,+10000)
scale_x_discrete(limits=c(0,2,4,6,8,10)) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) + #change the scale on y axis
annotation_logticks(sides = "l") + # adds linier tickmarks
#coord_cartesian(ylim=c(-4,4), expand = F) + #changes the y axis
#theme(axis.text.x = element_text(angle = 45, hjust = 1)) + #adjust text tilt and possition
#scale_fill_manual(values=c("#000000", "#000000", "#000000")) +
background_grid(major = "none", minor = "none") + # add thin horizontal lines
#theme_classic() +
panel_border(colour = "black", size = 1) + # and a border around each panel
labs (x="Time (days)", y=("Relative Biomass (SM/TB)"), title = "A) Control") +
theme(plot.title = element_text(vjust = - 7, hjust = 0.1)) +
theme(panel.spacing = unit(0.1, "lines")) +
theme(legend.title=element_blank()) +
theme(legend.text=element_text(size=25)) +
theme(text=(element_text(size=30))) +
theme(axis.text=(element_text(size=30))) +
theme(panel.background = element_blank()) +
theme(legend.text = element_text(face = "italic")) +
theme(aspect.ratio=1) +
#stat_cor(aes(color = scientific_name), label.x = 3)
theme(plot.margin=unit(c(0,1,0,0.2),"cm")) +
theme(legend.position = c(0.5,0.15),
#legend.justification = c("right", "top"),
#legend.box.just = "right",
#scale_fill_manual(breaks=c(3)),
legend.margin = margin(2, 2, 2, 2),
#guides(color = FALSE), #,color = FALSE, size = FALSE,
legend.box.background = element_rect(fill='white'),
legend.key = element_rect(fill = 'white', color = 'white'),
legend.background = element_blank(),
legend.spacing.x=unit(0, "cm"),
legend.spacing.y=unit(0, "cm"))
print(Fig3.A)
dev.copy(pdf, "Results/Fig3A.pdf")
dev.off()
